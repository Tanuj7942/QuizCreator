/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.quizcreator;

import com.mycompany.quizcreator.beans.Question;
import com.mycompany.quizcreator.beans.QuizQuestion;
import com.mycompany.quizcreator.beans.TestSettings;
import com.mycompany.quizcreator.questiondatabase.QuestionDatabase;
import java.awt.event.ItemEvent;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import java.util.Random;
import javax.swing.JOptionPane;

/**
 *
 * @author 23379
 */
public class QuizPanel extends javax.swing.JFrame {

    /**
     * Creates new form QuizPanel
     */
    TestSettings settings = null;
    QuestionDatabase database = null;
    //List<QuizQuestion> questions = null;
    List<Question> questions = null;
    int questionCount = 0;

    public QuizPanel() {
        initComponents();

        database = new QuestionDatabase();
        settings = database.getTestSettings();
        //questions = database.getQuizQuestions(settings.getNoOfQuestions());
        questions = database.getQuestions(null);
        Collections.shuffle(questions);

        setQuestion(questionCount);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        optionGroup = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        questionIDLabel = new javax.swing.JLabel();
        questionLabel = new javax.swing.JLabel();
        firstOptionBox = new javax.swing.JCheckBox();
        secondOptionBox = new javax.swing.JCheckBox();
        thirdOptionBox = new javax.swing.JCheckBox();
        fourthOptionBox = new javax.swing.JCheckBox();
        firstQuestion = new javax.swing.JButton();
        previousQuestion = new javax.swing.JButton();
        nextQuestion = new javax.swing.JButton();
        lastQuestion = new javax.swing.JButton();
        countView = new javax.swing.JTextField();
        submitBtn = new javax.swing.JButton();
        questionNumber = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Quiz");

        questionIDLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        questionIDLabel.setText("jLabel2");

        questionLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        questionLabel.setText("jLabel3");

        optionGroup.add(firstOptionBox);
        firstOptionBox.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        firstOptionBox.setText("jCheckBox1");
        firstOptionBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                firstOptionBoxItemStateChanged(evt);
            }
        });

        optionGroup.add(secondOptionBox);
        secondOptionBox.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        secondOptionBox.setText("jCheckBox2");
        secondOptionBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                secondOptionBoxItemStateChanged(evt);
            }
        });

        optionGroup.add(thirdOptionBox);
        thirdOptionBox.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        thirdOptionBox.setText("jCheckBox3");
        thirdOptionBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                thirdOptionBoxItemStateChanged(evt);
            }
        });

        optionGroup.add(fourthOptionBox);
        fourthOptionBox.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        fourthOptionBox.setText("jCheckBox4");
        fourthOptionBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                fourthOptionBoxItemStateChanged(evt);
            }
        });

        firstQuestion.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        firstQuestion.setText("First Question");
        firstQuestion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstQuestionActionPerformed(evt);
            }
        });

        previousQuestion.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        previousQuestion.setText("Previous Question");
        previousQuestion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previousQuestionActionPerformed(evt);
            }
        });

        nextQuestion.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        nextQuestion.setText("Next Question");
        nextQuestion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextQuestionActionPerformed(evt);
            }
        });

        lastQuestion.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lastQuestion.setText("Last Question");
        lastQuestion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lastQuestionActionPerformed(evt);
            }
        });

        countView.setEditable(false);
        countView.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        countView.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        countView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                countViewActionPerformed(evt);
            }
        });

        submitBtn.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        submitBtn.setText("SUBMIT");
        submitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitBtnActionPerformed(evt);
            }
        });

        questionNumber.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        questionNumber.setText("jLabel2");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addComponent(firstQuestion)
                        .addGap(56, 56, 56)
                        .addComponent(previousQuestion)
                        .addGap(97, 97, 97)
                        .addComponent(countView, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 96, Short.MAX_VALUE)
                        .addComponent(nextQuestion)
                        .addGap(55, 55, 55)
                        .addComponent(lastQuestion))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(415, 415, 415)
                        .addComponent(submitBtn)))
                .addGap(40, 40, 40))
            .addGroup(layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(questionIDLabel)
                    .addComponent(questionNumber))
                .addGap(152, 152, 152)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(secondOptionBox)
                    .addComponent(firstOptionBox)
                    .addComponent(questionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 700, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fourthOptionBox)
                    .addComponent(thirdOptionBox))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(submitBtn))
                        .addGap(31, 31, 31)
                        .addComponent(questionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(86, 86, 86)
                        .addComponent(questionNumber)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(questionIDLabel)))
                .addGap(57, 57, 57)
                .addComponent(firstOptionBox)
                .addGap(31, 31, 31)
                .addComponent(secondOptionBox)
                .addGap(28, 28, 28)
                .addComponent(thirdOptionBox)
                .addGap(26, 26, 26)
                .addComponent(fourthOptionBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 114, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(firstQuestion)
                    .addComponent(previousQuestion)
                    .addComponent(lastQuestion)
                    .addComponent(nextQuestion)
                    .addComponent(countView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void countViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_countViewActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_countViewActionPerformed

    private void firstQuestionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstQuestionActionPerformed
        // TODO add your handling code here:
        optionGroup.clearSelection();
        setQuestion(questionCount = 0);
        keepingSelection(questionCount);
    }//GEN-LAST:event_firstQuestionActionPerformed

    private void lastQuestionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lastQuestionActionPerformed
        // TODO add your handling code here:
        optionGroup.clearSelection();
        setQuestion(questionCount = settings.getNoOfQuestions() - 1);
        keepingSelection(questionCount);
    }//GEN-LAST:event_lastQuestionActionPerformed

    private void nextQuestionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextQuestionActionPerformed
        // TODO add your handling code here:
        optionGroup.clearSelection();
        questionCount = questionCount + 1;
        if (questionCount == settings.getNoOfQuestions()) {
            questionCount = settings.getNoOfQuestions() - 1;
        }
        setQuestion(questionCount);
        keepingSelection(questionCount);
    }//GEN-LAST:event_nextQuestionActionPerformed

    private void previousQuestionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_previousQuestionActionPerformed
        // TODO add your handling code here:
        optionGroup.clearSelection();
        if (questionCount != 0) {
            questionCount = questionCount - 1;
        }
        setQuestion(questionCount);
        keepingSelection(questionCount);
    }//GEN-LAST:event_previousQuestionActionPerformed

    private void submitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitBtnActionPerformed
        // TODO add your handling code here:
        keepingSelection(questionCount);
        if (JOptionPane.showConfirmDialog(this, "Are you sure you want to submit?", "Confirmation Message", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            int marks = 0;
            for (int i = 0; i < settings.getNoOfQuestions(); i++) {
                if (((QuizQuestion)questions.get(i)).isCorrect()) {
                    marks = marks + settings.getMarksForEachQuestion();
                }
            }
            int minimumMarks = (int) ((settings.getNoOfQuestions() * settings.getMarksForEachQuestion() * settings.getMinimumPassingMarks()) / 100);
            if (marks >= minimumMarks && marks != 0) {
                marksMessage("Congratulations!! You have passed the test.\n You have scored " + marks, "Congratulations!!");
            } else {
                marksMessage("You have failed the test!! \n You have scored " + marks + " (less than " + settings.getMinimumPassingMarks() + "%).\n Please try again next time.", "FAIL");
            }
        }
    }//GEN-LAST:event_submitBtnActionPerformed

    private void firstOptionBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_firstOptionBoxItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            ((QuizQuestion)questions.get(questionCount)).setUserSelectedOption(firstOptionBox.getText());
        }
    }//GEN-LAST:event_firstOptionBoxItemStateChanged

    private void secondOptionBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_secondOptionBoxItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            ((QuizQuestion)questions.get(questionCount)).setUserSelectedOption(secondOptionBox.getText());
        }
    }//GEN-LAST:event_secondOptionBoxItemStateChanged

    private void thirdOptionBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_thirdOptionBoxItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            ((QuizQuestion)questions.get(questionCount)).setUserSelectedOption(thirdOptionBox.getText());
        }
    }//GEN-LAST:event_thirdOptionBoxItemStateChanged

    private void fourthOptionBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_fourthOptionBoxItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            ((QuizQuestion)questions.get(questionCount)).setUserSelectedOption(fourthOptionBox.getText());
        }
    }//GEN-LAST:event_fourthOptionBoxItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuizPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuizPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuizPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuizPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QuizPanel().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField countView;
    private javax.swing.JCheckBox firstOptionBox;
    private javax.swing.JButton firstQuestion;
    private javax.swing.JCheckBox fourthOptionBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton lastQuestion;
    private javax.swing.JButton nextQuestion;
    private javax.swing.ButtonGroup optionGroup;
    private javax.swing.JButton previousQuestion;
    private javax.swing.JLabel questionIDLabel;
    private javax.swing.JLabel questionLabel;
    private javax.swing.JLabel questionNumber;
    private javax.swing.JCheckBox secondOptionBox;
    private javax.swing.JButton submitBtn;
    private javax.swing.JCheckBox thirdOptionBox;
    // End of variables declaration//GEN-END:variables

    private void setQuestion(int questionCount) {
        countView.setText(String.valueOf(questionCount + 1) + "/" + String.valueOf(settings.getNoOfQuestions()));
        questionNumber.setText("Q." + String.valueOf(questionCount + 1));
        questionIDLabel.setText("(" + String.valueOf(((QuizQuestion)questions.get(questionCount)).getQuestionID()) + ")");
        questionLabel.setText("<html>" + ((QuizQuestion)questions.get(questionCount)).getQuestion() + "</html>");
        firstOptionBox.setText(((QuizQuestion)questions.get(questionCount)).getFirstOption());
        secondOptionBox.setText(((QuizQuestion)questions.get(questionCount)).getSecondOption());
        thirdOptionBox.setText(((QuizQuestion)questions.get(questionCount)).getThirdOption());
        fourthOptionBox.setText(((QuizQuestion)questions.get(questionCount)).getFourthOption());
    }

    private void keepingSelection(int questionCount) {
        if (((QuizQuestion)questions.get(questionCount)).getUserSelectedOption() != null) {
            if (((QuizQuestion)questions.get(questionCount)).getUserSelectedOption().equals(firstOptionBox.getText())) {
                firstOptionBox.setSelected(true);
            } else if (((QuizQuestion)questions.get(questionCount)).getUserSelectedOption().equals(secondOptionBox.getText())) {
                secondOptionBox.setSelected(true);
            } else if (((QuizQuestion)questions.get(questionCount)).getUserSelectedOption().equals(thirdOptionBox.getText())) {
                thirdOptionBox.setSelected(true);
            } else if (((QuizQuestion)questions.get(questionCount)).getUserSelectedOption().equals(fourthOptionBox.getText())) {
                fourthOptionBox.setSelected(true);
            }
        }
    }

    private void marksMessage(String message, String title) {
        JOptionPane.showMessageDialog(this, message, title, JOptionPane.INFORMATION_MESSAGE);
        MainScreen main = new MainScreen();
        main.setLocationRelativeTo(this);
        this.dispose();
        main.setVisible(true);
    }
}
