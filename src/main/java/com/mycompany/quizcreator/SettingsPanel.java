/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package com.mycompany.quizcreator;

import com.mycompany.quizcreator.beans.TestSettings;
import com.mycompany.quizcreator.questiondatabase.QuestionDatabase;
import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author 23379
 */
public class SettingsPanel extends javax.swing.JInternalFrame {

    /**
     * Creates new form SettingsPanel
     */
    TestSettings settings = null;
    QuestionDatabase database = null;
    public SettingsPanel(int totalQuestions) {
        initComponents();
        this.totalQuestions.setText(String.valueOf(totalQuestions));
        database = new QuestionDatabase();
        settings = database.getTestSettings();
        previousSetQuestions.setText("Previous:- " + settings.getNoOfQuestions());
        previousMarks.setText("Previous:- " + settings.getMarksForEachQuestion());
        previousMinimumMarks.setText("Previous:- " + settings.getMinimumPassingMarks());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        totalQuestions = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        setNoOfQuestions = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        marksForEachQuestion = new javax.swing.JTextField();
        totalMarks = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        minimumPassingMarks = new javax.swing.JTextField();
        setBtn = new javax.swing.JButton();
        cancelBtn = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        previousSetQuestions = new javax.swing.JLabel();
        previousMarks = new javax.swing.JLabel();
        previousMinimumMarks = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setText("SETTINGS");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel2.setText("Total No. of Questions");

        totalQuestions.setEditable(false);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel3.setText("Set No. of Questions for Test");

        setNoOfQuestions.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setNoOfQuestionsActionPerformed(evt);
            }
        });
        setNoOfQuestions.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                setNoOfQuestionsKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                setNoOfQuestionsKeyReleased(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel4.setText("Set Marks for Each Question");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel5.setText("Total Marks of the Test");

        marksForEachQuestion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                marksForEachQuestionKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                marksForEachQuestionKeyReleased(evt);
            }
        });

        totalMarks.setEditable(false);

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel6.setText("Set Minimum Passing Marks ");

        minimumPassingMarks.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                minimumPassingMarksKeyPressed(evt);
            }
        });

        setBtn.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        setBtn.setText("SET");
        setBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setBtnActionPerformed(evt);
            }
        });

        cancelBtn.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        cancelBtn.setText("CANCEL");
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setText("(Min 5 Questions)");

        previousSetQuestions.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        previousSetQuestions.setText("jLabel8");

        previousMarks.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        previousMarks.setText("jLabel9");

        previousMinimumMarks.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        previousMinimumMarks.setText("jLabel10");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(368, 368, 368))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(175, 175, 175)
                .addComponent(setBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cancelBtn)
                .addGap(164, 164, 164))
            .addGroup(layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(totalQuestions)
                                    .addComponent(setNoOfQuestions)
                                    .addComponent(marksForEachQuestion)
                                    .addComponent(totalMarks)
                                    .addComponent(minimumPassingMarks, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2))
                                .addGap(447, 447, 447)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(previousSetQuestions)
                            .addComponent(previousMarks)
                            .addComponent(previousMinimumMarks))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(56, 56, 56)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(totalQuestions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(setNoOfQuestions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(previousSetQuestions))
                .addGap(2, 2, 2)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(marksForEachQuestion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(previousMarks))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(totalMarks, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(minimumPassingMarks, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(previousMinimumMarks))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 92, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelBtn)
                    .addComponent(setBtn))
                .addGap(51, 51, 51))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void setNoOfQuestionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setNoOfQuestionsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_setNoOfQuestionsActionPerformed

    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_cancelBtnActionPerformed

    private void setNoOfQuestionsKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_setNoOfQuestionsKeyPressed
        // TODO add your handling code here:
        characterCheck(setNoOfQuestions, evt);
    }//GEN-LAST:event_setNoOfQuestionsKeyPressed

    private void marksForEachQuestionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_marksForEachQuestionKeyPressed
        // TODO add your handling code here:
        characterCheck(marksForEachQuestion, evt);
    }//GEN-LAST:event_marksForEachQuestionKeyPressed

    private void minimumPassingMarksKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_minimumPassingMarksKeyPressed
        // TODO add your handling code here:
        characterCheck(minimumPassingMarks, evt);
    }//GEN-LAST:event_minimumPassingMarksKeyPressed

    private void marksForEachQuestionKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_marksForEachQuestionKeyReleased
        // TODO add your handling code here:
        totalMarksCheck();
    }//GEN-LAST:event_marksForEachQuestionKeyReleased

    private void setNoOfQuestionsKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_setNoOfQuestionsKeyReleased
        // TODO add your handling code here:
        totalMarksCheck();
    }//GEN-LAST:event_setNoOfQuestionsKeyReleased

    private void setBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setBtnActionPerformed
        // TODO add your handling code here:
        if (setNoOfQuestions.getText().isEmpty()
                || marksForEachQuestion.getText().isEmpty()
                || minimumPassingMarks.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "One or more fields are left blank !!", "Blank Fields", JOptionPane.INFORMATION_MESSAGE);
        } else if (Integer.parseInt(setNoOfQuestions.getText()) < 5 || Integer.parseInt(setNoOfQuestions.getText()) > Integer.parseInt(totalQuestions.getText())) {
            JOptionPane.showMessageDialog(this, "Atleast 5 questions are required or questions can't be more than total question!!", "ERROR", JOptionPane.INFORMATION_MESSAGE);
        } else if (JOptionPane.YES_OPTION == JOptionPane.showConfirmDialog(this, "Are you sure you want to continue?", "Confirmation Message", JOptionPane.YES_NO_OPTION)) {
            settings = new TestSettings();

            settings.setTotalQuestions(Integer.parseInt(totalQuestions.getText()));
            settings.setNoOfQuestions(Integer.parseInt(setNoOfQuestions.getText()));
            settings.setMarksForEachQuestion(Integer.parseInt(marksForEachQuestion.getText()));
            settings.setMinimumPassingMarks(Integer.parseInt(minimumPassingMarks.getText()));

            database = new QuestionDatabase();
            database.setTestSettings(settings);

            setNoOfQuestions.setText("");
            marksForEachQuestion.setText("");
            minimumPassingMarks.setText("");
            totalMarks.setText("");

            settings = database.getTestSettings();
            previousSetQuestions.setText("Previous:- " + settings.getNoOfQuestions());
            previousMarks.setText("Previous:- " + settings.getMarksForEachQuestion());
            previousMinimumMarks.setText("Previous:- " + settings.getMinimumPassingMarks());

        }
    }//GEN-LAST:event_setBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JTextField marksForEachQuestion;
    private javax.swing.JTextField minimumPassingMarks;
    private javax.swing.JLabel previousMarks;
    private javax.swing.JLabel previousMinimumMarks;
    private javax.swing.JLabel previousSetQuestions;
    private javax.swing.JButton setBtn;
    private javax.swing.JTextField setNoOfQuestions;
    private javax.swing.JTextField totalMarks;
    private javax.swing.JTextField totalQuestions;
    // End of variables declaration//GEN-END:variables

    private void characterCheck(JTextField textField, java.awt.event.KeyEvent evt) {
        textField.setTransferHandler(null);
        if (Character.isDigit(evt.getKeyChar()) || evt.getKeyChar() == KeyEvent.VK_BACK_SPACE || evt.getKeyChar() == KeyEvent.VK_DELETE) {
            textField.setEditable(true);
        } else {
            textField.setEditable(false);
        }
    }

    private void totalMarksCheck() {
        if (marksForEachQuestion.getText().isEmpty() == false && setNoOfQuestions.getText().isEmpty() == false) {
            totalMarks.setText(String.valueOf(Integer.parseInt(setNoOfQuestions.getText()) * Integer.parseInt(marksForEachQuestion.getText())));
        } else {
            totalMarks.setText("0");
        }
    }
}
